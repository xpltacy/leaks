-- heavenstupidity < universal >

local FS = format.string
local SETTING = {
        KEYBIND = {
            ["CHECKSTATUS"] = "n";
            ["TOGGLENOTIF"] = "v";
            ["TOGGLE"] = "r";
            ["INCREASE"] = "q";
            ["DECREASE"] = "e";
    };
        REACH = {
            ["DISTANCE"] = 4;
            ["ENABLED"] = true;
            ["INCREMENT"] = 1;
            ["DAMAGEAMP"] = 2; -- 2 is default
    };
        MISC = {
            ["NOTIFICATIONS"] = true;
            ["HOOKS"] = false;
      };
}
 
-- VARIABLES
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local StarterGui = game:GetService("StarterGui")
local Workspace = game:GetService("Workspace")

local Player = game.Players.LocalPlayer
local PlayerChar = Player.Character
local Sword = PlayerChar:FindFirstChildOfClass("Tool")
local Mouse = LocalPlayer:GetMouse()

-- FUNCTIONS
local function Notifier(x)
    if SETTING.MISC.NOTIFICATIONS then
        game.StarterGui:SetCore("SendNotification", {
            Title = "HEAVENSTUPIDITY!";
            Text = x;
        })
    end
end
local function FIRETOUCHED(touch1, touch2)
        coroutine.wrap(pcall(function()
            firetouchinterest(touch1, touch2, 0)
            task.wait()
            firetouchinterest(touch1, touch2, 1)
        end))
end

-- NOTIFCATIONS
Mouse.KeyDown:Connect(function(KEY)
        if KEY == SETTING.KEYBIND.TOGGLENOTIF then
                SETTING.MISC.NOTIFICATIONS = not SETTING.MISC.NOTIFICATIONS
                if SETTING.MISC.NOTIFICATIONS then
                return
            end
    elseif KEY == SETTING.KEYBIND.TOGGLE then
                SETTING.REACH.ENABLED = not SETTING.REACH.ENABLED
                if SETTING.REACH.ENABLED then
                Notifier("Reach has been toggled% " .. SETTING.REACH.ENABLED)
                return
            end
    elseif KEY == SETTING.KEYBIND.CHECKSTATUS then
                local nv = fs("Radius% " .. SETTING.REACH.DISTANCE, "Toggle status% " .. SETTING.REACH.ENABLED)
                Notifier(fs)
    elseif KEY == SETTING.KEYBIND.INCREASE then
                SETTING.REACH.DISTANCE = SETTING.REACH.DISTANCE + SETTING.REACH.INCREMENT
                Notifier("Radius is at% " .. SETTING.REACH.DISTANCE)
    elseif KEY == SETTING.KEYBIND.DECREASE then
                SETTING.REACH.DISTANCE = SETTING.REACH.DISTANCE - SETTING.REACH.INCREMENT
                Notifier("Radius is at% " .. SETTING.REACH.DISTANCE)
        end
end)

-- HOOKS
local TOUCHHOOK; TOUCHHOOK = hookmetamethod(game, "__namecall", newcclosure(function(self , ...)
        if SETTING.MISC.HOOKS then
        local Argument = {...}
                if not checkcaller() then
                        for i,v in pairs(game.Players:GetChildren()) do
                                if v.Name ~= "TouchTransmitter" then
                                if tostring(getnamecallmethod()) == "GetTouchingParts" and self == ... then
                                return TOUCHHOOK(self , ...)
                                end
                        end
                end
        end
end
end))
local NVE; NVE = hookfunction(game, newcclosure(pcall(function(self , state) -- toggle this off if it gets detected
        if not checkcaller() then; if tostring(state):find("pcall") then
      return NVE(self , state)
    end
  end
end)))

-- METHOD

RunService.RenderStepped:Connect(function()
  if SETTING.REACH.ENABLED then
    local nv = pcall(function()
    local SelectHum = PlayerChar:FindFirstChild("Humanoid")
    local SelectHRP = PlayerChar:FindFirstChild("HumanoidRootPart")
    local SelectedPart = Vector3.new(handle.Position + PlayerChar.HumanoidRootPart.Position, handle.Position + PlayerChar.HumanoidRootPart.Position)
        local UsedPart = Workspace:GetPartsInPart(SelectedPart)
            for _, v in pairs(UsedPart) do
                if v:IsA("Part") and v:FindFirstChildOfClass("TouchTransmitter") and v.Name ~= "HumanoidRootPart" or v.Name ~= "Handle" then
                    for i, fti in pairs(game.Players:GetPlayers()) do
                        if fti:IsA("Part") then
                            local distance = (handle.Position - Player.Character.HumanoidRootPart.Position).magnitude
                        if distance <= SETTING.REACH.DISTANCE then
                            for i = 1,SETTING.REACH.DAMAGEAMP do
                                FIRETOUCHED(handle, FTI)
                                FIRETOUCHED(FTI, v)
                                end
                            end
                        end
                    end
                else
                    for i, env in pairs(game:GetPlayers()) do
                        for env = 1,SETTING.REACH.DAMAGEAMP do
                            FIRETOUCHED(handle, FTI)
                            FIRETOUCHED(FTI, v)
                        end
                    end
                end
            end
        end)
    end
end)
                
